@typeparam T

<table>
    <thead>@Header</thead>
    <tbody>
        <Virtualize ItemsProvider="LoadAsync">
            @RowTemplate(context)
        </Virtualize>
    </tbody>
</table>

@code {
    [Parameter, EditorRequired]
    public Func<int, int, CancellationToken, Task<(int, List<T>)>> Provider { get; set; }
    [Parameter, EditorRequired]
    public RenderFragment Header { get; set; }
    [Parameter, EditorRequired]
    public RenderFragment<T> RowTemplate { get; set; }


    private async ValueTask<ItemsProviderResult<T>> LoadAsync(ItemsProviderRequest request)
    {
        (var total, var data) = await Provider.Invoke(request.StartIndex, request.Count, request.CancellationToken);
        return new(data, total);
    }
}